% a test image
testCoinImage = imread('testCoinImage3.png');

% get the mask
testcoinMask = segmentCoin(testCoinImage);

% for visualization, combine the mask and image
outpict = imoverlay(testCoinImage,testcoinMask,[1 0 0.5]);
imshow(outpict,'border','tight')

function BW = segmentCoin(inputImage)
    %segmentImage Segment image using auto-generated code from Image Segmenter app
    [BW, MASKEDIMAGE] = segmentImage(X) segments image X using auto-generated
    code from the Image Segmenter app. The final segmentation is returned in
    BW, and a masked image is returned in MASKEDIMAGE.
    % Auto-generated by imageSegmenter app on 08-Jul-2023
    %----------------------------------------------------
    % Threshold image with global threshold
    BW = imbinarize(im2gray(inputImage));
    
    % Fill holes
    BW = imfill(BW, 'holes');
    
    % Find areas so we know what size blobs to exclude..
    props = regionprops(BW, 'Area');
    allAreas = sort([props.Area])
    Throw out blobs less than 2000 in area.
    BW = bwareaopen(BW, 2000);
    
    % get edge information
    G = imgradient(im2double(inputImage));
    
    % Measure areas and perimeters.
    labeledImage = bwlabel(BW);
    coinProps = regionprops(BW, G, 'MeanIntensity');
    edginess = vertcat(coinProps.MeanIntensity)	
    
    % Get a mask of only where the average gradient is high
    BW = ismember(labeledImage, find(edginess >= 0.3));
end